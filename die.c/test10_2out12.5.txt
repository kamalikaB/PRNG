				NOTE

	Most of the tests in DIEHARD return a p-value, which
	should be uniform on [0,1) if the input file contains truly
	independent random bits.   Those p-values are obtained by
	p=1-F(X), where F is the assumed distribution of the sample
	random variable X---often normal. But that assumed F is often just
	an asymptotic approximation, for which the fit will be worst
	in the tails. Thus you should not be surprised with  occasion-
	al p-values near 0 or 1, such as .0012 or .9983. When a bit
	stream really FAILS BIG, you will get p`s of 0 or 1 to six 
	or more places.  By all means, do not, as a Statistician 
	might, think that a p < .025 or p> .975 means that the RNG
	has "failed the test at the .05 level".  Such p`s happen
	among the hundreds that DIEHARD produces, even with good RNGs.
	 So keep in mind that "p happens"

	Enter the name of the file to be tested.
	This must be a form="unformatted",access="direct" binary
	file of about 10-12 million bytes. Enter file name: 

/home/kamalika/Desktop/krishnendu/project/diehard tests/die.c/ca_gen_no101.bin

		HERE ARE YOUR CHOICES:

		1   Birthday Spacings
		2   Overlapping Permutations
		3   Ranks of 31x31 and 32x32 matrices
		4   Ranks of 6x8 Matrices
		5   Monkey Tests on 20-bit Words
		6   Monkey Tests OPSO,OQSO,DNA
		7   Count the 1`s in a Stream of Bytes
		8   Count the 1`s in Specific Bytes
		9   Parking Lot Test
		10  Minimum Distance Test
		11  Random Spheres Test
		12  The Sqeeze Test
		13  Overlapping Sums Test
		14  Runs Test
		15  The Craps Test
		16  All of the above

	To choose any particular tests, enter corresponding numbers.
	Enter 16 for all tests. If you want to perform all but a few
	tests, enter corresponding numbers preceded by "-" sign.
	Tests are executed in the order they are entered.

	Enter your choices.
16

	|-------------------------------------------------------------|
	|           This is the BIRTHDAY SPACINGS TEST                |
	|Choose m birthdays in a "year" of n days.  List the spacings |
	|between the birthdays.  Let j be the number of values that   |
	|occur more than once in that list, then j is asymptotically  |
	|Poisson distributed with mean m^3/(4n).  Experience shows n  |
	|must be quite large, say n>=2^18, for comparing the results  |
	|to the Poisson distribution with that mean.  This test uses  |
	|n=2^24 and m=2^10, so that the underlying distribution for j |
	|is taken to be Poisson with lambda=2^30/(2^26)=16. A sample  |
	|of 200 j''s is taken, and a chi-square goodness of fit test  |
	|provides a p value.  The first test uses bits 1-24 (counting |
	|from the left) from integers in the specified file.  Then the|
	|file is closed and reopened, then bits 2-25 of the same inte-|
	|gers are used to provide birthdays, and so on to bits 9-32.  |
	|Each set of bits provides a p-value, and the nine p-values   |
	|provide a sample for a KSTEST.                               |
	|------------------------------------------------------------ |

		RESULTS OF BIRTHDAY SPACINGS TEST FOR /home/kamalika/Desktop/krishnendu/project/diehard tests/die.c/ca_gen_no101.bin
	(no_bdays=1024, no_days/yr=2^24, lambda=16.00, sample size=500)

	Bits used	mean		chisqr		p-value
	 1 to 24	15.52		30.3836		0.023708
	 2 to 25	15.51		19.6850		0.290659
	 3 to 26	15.92		9.9331		0.906393
	 4 to 27	15.60		11.0613		0.853360
	 5 to 28	15.46		23.3150		0.139273
	 6 to 29	15.88		22.5485		0.164534
	 7 to 30	15.70		16.3295		0.500609
	 8 to 31	15.74		11.0165		0.855702
	 9 to 32	15.79		17.2887		0.434981

			degree of freedoms is: 17
	---------------------------------------------------------------
		p-value for KStest on those 9 p-values: 0.798373


	|-------------------------------------------------------------|
	|           THE OVERLAPPING 5-PERMUTATION TEST                |
	|This is the OPERM5 test.  It looks at a sequence of one mill-|
	|ion 32-bit random integers.  Each set of five consecutive    |
	|integers can be in one of 120 states, for the 5! possible or-|
	|derings of five numbers.  Thus the 5th, 6th, 7th,...numbers  |
	|each provide a state. As many thousands of state transitions |
	|are observed,  cumulative counts are made of the number of   |
	|occurences of each state.  Then the quadratic form in the    |
	|weak inverse of the 120x120 covariance matrix yields a test  |
	|equivalent to the likelihood ratio test that the 120 cell    |
	|counts came from the specified (asymptotically) normal dis-  |
	|tribution with the specified 120x120 covariance matrix (with |
	|rank 99).  This version uses 1,000,000 integers, twice.      |
	|-------------------------------------------------------------|

			OPERM5 test for file 
		  (For samples of 1,000,000 consecutive 5-tuples)

			  sample 1 
	chisquare=121658216086.683640 with df=99; p-value= -nan
	_______________________________________________________________

			  sample 2 
	chisquare=65486283933.577713 with df=99; p-value= -nan
	_______________________________________________________________


	|-------------------------------------------------------------|
	|This is the BINARY RANK TEST for 31x31 matrices. The leftmost|
	|31 bits of 31 random integers from the test sequence are used|
	|to form a 31x31 binary matrix over the field {0,1}. The rank |
	|is determined. That rank can be from 0 to 31, but ranks< 28  |
	|are rare, and their counts are pooled with those for rank 28.|
	|Ranks are found for 40,000 such random matrices and a chisqu-|
	|are test is performed on counts for ranks 31,30,28 and <=28. |
	|-------------------------------------------------------------|
		Rank test for binary matrices (31x31) from /home/kamalika/Desktop/krishnendu/project/diehard tests/die.c/ca_gen_no101.bin

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=28	221         	211.4       	0.434       	0.434       
	r=29	5103        	5134.0      	0.187       	0.622       
	r=30	23007       	23103.0     	0.399       	1.021       
	r=31	11669       	11551.5     	1.195       	2.216       

		chi-square = 2.216 with df = 3;  p-value = 0.529
	--------------------------------------------------------------

	|-------------------------------------------------------------|
	|This is the BINARY RANK TEST for 32x32 matrices. A random 32x|
	|32 binary matrix is formed, each row a 32-bit random integer.|
	|The rank is determined. That rank can be from 0 to 32, ranks |
	|less than 29 are rare, and their counts are pooled with those|
	|for rank 29.  Ranks are found for 40,000 such random matrices|
	|and a chisquare test is performed on counts for ranks  32,31,|
	|30 and <=29.                                                 |
	|-------------------------------------------------------------|
		Rank test for binary matrices (32x32) from /home/kamalika/Desktop/krishnendu/project/diehard tests/die.c/ca_gen_no101.bin

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=29	191         	211.4       	1.972       	1.972       
	r=30	5038        	5134.0      	1.795       	3.767       
	r=31	23132       	23103.0     	0.036       	3.804       
	r=32	11639       	11551.5     	0.662       	4.466       

		chi-square = 4.466 with df = 3;  p-value = 0.215
	--------------------------------------------------------------

	|-------------------------------------------------------------|
	|This is the BINARY RANK TEST for 6x8 matrices.  From each of |
	|six random 32-bit integers from the generator under test, a  |
	|specified byte is chosen, and the resulting six bytes form a |
	|6x8 binary matrix whose rank is determined.  That rank can be|
	|from 0 to 6, but ranks 0,1,2,3 are rare; their counts are    |
	|pooled with those for rank 4. Ranks are found for 100,000    |
	|random matrices, and a chi-square test is performed on       |
	|counts for ranks 6,5 and (0,...,4) (pooled together).        |
	|-------------------------------------------------------------|

		Rank test for binary matrices (6x8) from /home/kamalika/Desktop/krishnendu/project/diehard tests/die.c/ca_gen_no101.bin

			      bits  1 to  8

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	952         	944.3       	0.063       	0.063       
	r=5	21713       	21743.9     	0.044       	0.107       
	r=6	77335       	77311.8     	0.007       	0.114       

		chi-square = 0.114 with df = 2;  p-value = 0.945
	--------------------------------------------------------------

			      bits  2 to  9

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	903         	944.3       	1.806       	1.806       
	r=5	21783       	21743.9     	0.070       	1.877       
	r=6	77314       	77311.8     	0.000       	1.877       

		chi-square = 1.877 with df = 2;  p-value = 0.391
	--------------------------------------------------------------

			      bits  3 to 10

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	952         	944.3       	0.063       	0.063       
	r=5	21735       	21743.9     	0.004       	0.066       
	r=6	77313       	77311.8     	0.000       	0.066       

		chi-square = 0.066 with df = 2;  p-value = 0.967
	--------------------------------------------------------------

			      bits  4 to 11

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	954         	944.3       	0.100       	0.100       
	r=5	21795       	21743.9     	0.120       	0.220       
	r=6	77251       	77311.8     	0.048       	0.268       

		chi-square = 0.268 with df = 2;  p-value = 0.875
	--------------------------------------------------------------

			      bits  5 to 12

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	933         	944.3       	0.135       	0.135       
	r=5	21795       	21743.9     	0.120       	0.255       
	r=6	77272       	77311.8     	0.020       	0.276       

		chi-square = 0.276 with df = 2;  p-value = 0.871
	--------------------------------------------------------------

			      bits  6 to 13

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	931         	944.3       	0.187       	0.187       
	r=5	21508       	21743.9     	2.559       	2.747       
	r=6	77561       	77311.8     	0.803       	3.550       

		chi-square = 3.550 with df = 2;  p-value = 0.169
	--------------------------------------------------------------

			      bits  7 to 14

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	909         	944.3       	1.320       	1.320       
	r=5	21745       	21743.9     	0.000       	1.320       
	r=6	77346       	77311.8     	0.015       	1.335       

		chi-square = 1.335 with df = 2;  p-value = 0.513
	--------------------------------------------------------------

			      bits  8 to 15

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	909         	944.3       	1.320       	1.320       
	r=5	21743       	21743.9     	0.000       	1.320       
	r=6	77348       	77311.8     	0.017       	1.337       

		chi-square = 1.337 with df = 2;  p-value = 0.513
	--------------------------------------------------------------

			      bits  9 to 16

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	944         	944.3       	0.000       	0.000       
	r=5	21670       	21743.9     	0.251       	0.251       
	r=6	77386       	77311.8     	0.071       	0.322       

		chi-square = 0.322 with df = 2;  p-value = 0.851
	--------------------------------------------------------------

			      bits 10 to 17

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	944         	944.3       	0.000       	0.000       
	r=5	21722       	21743.9     	0.022       	0.022       
	r=6	77334       	77311.8     	0.006       	0.029       

		chi-square = 0.029 with df = 2;  p-value = 0.986
	--------------------------------------------------------------

			      bits 11 to 18

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	951         	944.3       	0.048       	0.048       
	r=5	21604       	21743.9     	0.900       	0.948       
	r=6	77445       	77311.8     	0.229       	1.177       

		chi-square = 1.177 with df = 2;  p-value = 0.555
	--------------------------------------------------------------

			      bits 12 to 19

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	937         	944.3       	0.056       	0.056       
	r=5	21756       	21743.9     	0.007       	0.063       
	r=6	77307       	77311.8     	0.000       	0.063       

		chi-square = 0.063 with df = 2;  p-value = 0.969
	--------------------------------------------------------------

			      bits 13 to 20

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	915         	944.3       	0.909       	0.909       
	r=5	21796       	21743.9     	0.125       	1.034       
	r=6	77289       	77311.8     	0.007       	1.041       

		chi-square = 1.041 with df = 2;  p-value = 0.594
	--------------------------------------------------------------

			      bits 14 to 21

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	959         	944.3       	0.229       	0.229       
	r=5	21543       	21743.9     	1.856       	2.085       
	r=6	77498       	77311.8     	0.448       	2.533       

		chi-square = 2.533 with df = 2;  p-value = 0.282
	--------------------------------------------------------------

			      bits 15 to 22

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	935         	944.3       	0.092       	0.092       
	r=5	21683       	21743.9     	0.171       	0.262       
	r=6	77382       	77311.8     	0.064       	0.326       

		chi-square = 0.326 with df = 2;  p-value = 0.850
	--------------------------------------------------------------

			      bits 16 to 23

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	954         	944.3       	0.100       	0.100       
	r=5	21615       	21743.9     	0.764       	0.864       
	r=6	77431       	77311.8     	0.184       	1.048       

		chi-square = 1.048 with df = 2;  p-value = 0.592
	--------------------------------------------------------------

			      bits 17 to 24

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	986         	944.3       	1.841       	1.841       
	r=5	21843       	21743.9     	0.452       	2.293       
	r=6	77171       	77311.8     	0.256       	2.550       

		chi-square = 2.550 with df = 2;  p-value = 0.279
	--------------------------------------------------------------

			      bits 18 to 25

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	916         	944.3       	0.848       	0.848       
	r=5	21830       	21743.9     	0.341       	1.189       
	r=6	77254       	77311.8     	0.043       	1.232       

		chi-square = 1.232 with df = 2;  p-value = 0.540
	--------------------------------------------------------------

			      bits 19 to 26

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	918         	944.3       	0.732       	0.732       
	r=5	21909       	21743.9     	1.254       	1.986       
	r=6	77173       	77311.8     	0.249       	2.235       

		chi-square = 2.235 with df = 2;  p-value = 0.327
	--------------------------------------------------------------

			      bits 20 to 27

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	877         	944.3       	4.796       	4.796       
	r=5	21755       	21743.9     	0.006       	4.802       
	r=6	77368       	77311.8     	0.041       	4.843       

		chi-square = 4.843 with df = 2;  p-value = 0.089
	--------------------------------------------------------------

			      bits 21 to 28

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	899         	944.3       	2.173       	2.173       
	r=5	21852       	21743.9     	0.537       	2.711       
	r=6	77249       	77311.8     	0.051       	2.762       

		chi-square = 2.762 with df = 2;  p-value = 0.251
	--------------------------------------------------------------

			      bits 22 to 29

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	898         	944.3       	2.270       	2.270       
	r=5	21638       	21743.9     	0.516       	2.786       
	r=6	77464       	77311.8     	0.300       	3.086       

		chi-square = 3.086 with df = 2;  p-value = 0.214
	--------------------------------------------------------------

			      bits 23 to 30

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	863         	944.3       	7.000       	7.000       
	r=5	21788       	21743.9     	0.089       	7.089       
	r=6	77349       	77311.8     	0.018       	7.107       

		chi-square = 7.107 with df = 2;  p-value = 0.029
	--------------------------------------------------------------

			      bits 24 to 31

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	946         	944.3       	0.003       	0.003       
	r=5	21952       	21743.9     	1.992       	1.995       
	r=6	77102       	77311.8     	0.569       	2.564       

		chi-square = 2.564 with df = 2;  p-value = 0.277
	--------------------------------------------------------------

			      bits 25 to 32

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	912         	944.3       	1.105       	1.105       
	r=5	21881       	21743.9     	0.864       	1.969       
	r=6	77207       	77311.8     	0.142       	2.111       

		chi-square = 2.111 with df = 2;  p-value = 0.348
	--------------------------------------------------------------
	    TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
	    These should be 25 uniform [0,1] random variates:
 
	0.944754    	0.391278    	0.967321    	0.874790    	0.871186     
	0.169496    	0.513047    	0.512585    	0.851092    	0.985838     
	0.555120    	0.968766    	0.594316    	0.281749    	0.849633     
	0.592279    	0.279495    	0.540026    	0.327052    	0.088790     
	0.251382    	0.213789    	0.028626    	0.277480    	0.347960    
		The KS test for those 25 supposed UNI's yields
			KS p-value = 0.518105

	|-------------------------------------------------------------|
	|                  THE BITSTREAM TEST                         |
	|The file under test is viewed as a stream of bits. Call them |
	|b1,b2,... .  Consider an alphabet with two "letters", 0 and 1|
	|and think of the stream of bits as a succession of 20-letter |
	|"words", overlapping.  Thus the first word is b1b2...b20, the|
	|second is b2b3...b21, and so on.  The bitstream test counts  |
	|the number of missing 20-letter (20-bit) words in a string of|
	|2^21 overlapping 20-letter words.  There are 2^20 possible 20|
	|letter words.  For a truly random string of 2^21+19 bits, the|
	|number of missing words j should be (very close to) normally |
	|distributed with mean 141,909 and sigma 428.  Thus           |
	| (j-141909)/428 should be a standard normal variate (z score)|
	|that leads to a uniform [0,1) p value.  The test is repeated |
	|twenty times.                                                |
	|-------------------------------------------------------------|

		THE OVERLAPPING 20-TUPLES BITSTREAM  TEST for /home/kamalika/Desktop/krishnendu/project/diehard tests/die.c/ca_gen_no101.bin
	 (20 bits/word, 2097152 words 20 bitstreams. No. missing words 
	  should average 141909.33 with sigma=428.00.)
	----------------------------------------------------------------
		   BITSTREAM test results for /home/kamalika/Desktop/krishnendu/project/diehard tests/die.c/ca_gen_no101.bin.

	Bitstream	No. missing words	z-score		p-value
	   1		141893 			-0.04		0.515218
	   2		141240 			-1.56		0.941074
	   3		141329 			-1.36		0.912436
	   4		141973 			 0.15		0.440871
	   5		141700 			-0.49		0.687611
	   6		141958 			 0.11		0.454732
	   7		141514 			-0.92		0.822170
	   8		142158 			 0.58		0.280619
	   9		141815 			-0.22		0.587219
	   10		142389 			 1.12		0.131203
	   11		142010 			 0.24		0.407023
	   12		141387 			-1.22		0.888843
	   13		141032 			-2.05		0.979810
	   14		141452 			-1.07		0.857359
	   15		142794 			 2.07		0.019368
	   16		142044 			 0.31		0.376514
	   17		142043 			 0.31		0.377401
	   18		141840 			-0.16		0.564342
	   19		141387 			-1.22		0.888843
	   20		141602 			-0.72		0.763640
	----------------------------------------------------------------

	|-------------------------------------------------------------|
	|        OPSO means Overlapping-Pairs-Sparse-Occupancy        |
	|The OPSO test considers 2-letter words from an alphabet of   |
	|1024 letters.  Each letter is determined by a specified ten  |
	|bits from a 32-bit integer in the sequence to be tested. OPSO|
	|generates  2^21 (overlapping) 2-letter words  (from 2^21+1   |
	|"keystrokes")  and counts the number of missing words---that |
	|is 2-letter words which do not appear in the entire sequence.|
	|That count should be very close to normally distributed with |
	|mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should|
	|be a standard normal variable. The OPSO test takes 32 bits at|
	|a time from the test file and uses a designated set of ten   |
	|consecutive bits. It then restarts the file for the next de- |
	|signated 10 bits, and so on.                                 |
	|------------------------------------------------------------ |

			   OPSO test for file /home/kamalika/Desktop/krishnendu/project/diehard tests/die.c/ca_gen_no101.bin

	Bits used	No. missing words	z-score		p-value
	23 to 32  		146412 		 15.5264		0.000000
	22 to 31  		144479 		 8.8609		0.000000
	21 to 30  		143060 		 3.9678		0.000036
	20 to 29  		142824 		 3.1540		0.000805
	19 to 28  		142368 		 1.5816		0.056868
	18 to 27  		141826 		-0.2873		0.613076
	17 to 26  		141743 		-0.5736		0.716864
	16 to 25  		141945 		 0.1230		0.451053
	15 to 24  		141827 		-0.2839		0.611755
	14 to 23  		142043 		 0.4609		0.322424
	13 to 22  		141996 		 0.2989		0.382523
	12 to 21  		142000 		 0.3127		0.377271
	11 to 20  		141738 		-0.5908		0.722670
	10 to 19  		141658 		-0.8667		0.806934
	9 to 18  		142161 		 0.8678		0.192744
	8 to 17  		142124 		 0.7402		0.229577
	7 to 16  		141813 		-0.3322		0.630120
	6 to 15  		142330 		 1.4506		0.073448
	5 to 14  		142201 		 1.0058		0.157266
	4 to 13  		142421 		 1.7644		0.038834
	3 to 12  		142377 		 1.6127		0.053410
	2 to 11  		142573 		 2.2885		0.011054
	1 to 10  		142086 		 0.6092		0.271194
	-----------------------------------------------------------------

	|------------------------------------------------------------ |
	|    OQSO means Overlapping-Quadruples-Sparse-Occupancy       |
	|  The test OQSO is similar, except that it considers 4-letter|
	|words from an alphabet of 32 letters, each letter determined |
	|by a designated string of 5 consecutive bits from the test   |
	|file, elements of which are assumed 32-bit random integers.  |
	|The mean number of missing words in a sequence of 2^21 four- |
	|letter words,  (2^21+3 "keystrokes"), is again 141909, with  |
	|sigma = 295.  The mean is based on theory; sigma comes from  |
	|extensive simulation.                                        |
	|------------------------------------------------------------ |

			   OQSO test for file /home/kamalika/Desktop/krishnendu/project/diehard tests/die.c/ca_gen_no101.bin

	Bits used	No. missing words	z-score		p-value
	28 to 32  		142467 		 1.8904		0.029352
	27 to 31  		142286 		 1.2768		0.100828
	26 to 30  		142266 		 1.2091		0.113322
	25 to 29  		143670 		 5.9684		0.000000
	24 to 28  		142398 		 1.6565		0.048809
	23 to 27  		142125 		 0.7311		0.232364
	22 to 26  		141818 		-0.3096		0.621565
	21 to 25  		142030 		 0.4091		0.341251
	20 to 24  		141887 		-0.0757		0.530169
	19 to 23  		141888 		-0.0723		0.528820
	18 to 22  		142364 		 1.5413		0.061627
	17 to 21  		141806 		-0.3503		0.636932
	16 to 20  		141878 		-0.1062		0.542289
	15 to 19  		141853 		-0.1909		0.575717
	14 to 18  		141992 		 0.2802		0.389648
	13 to 17  		141390 		-1.7604		0.960833
	12 to 16  		142082 		 0.5853		0.279166
	11 to 15  		141991 		 0.2768		0.390949
	10 to 14  		142053 		 0.4870		0.313123
	9 to 13  		141928 		 0.0633		0.474768
	8 to 12  		142032 		 0.4158		0.338767
	7 to 11  		142332 		 1.4328		0.075960
	6 to 10  		141709 		-0.6791		0.751458
	5 to 9  		142825 		 3.1040		0.000955
	4 to 8  		141841 		-0.2316		0.591586
	3 to 7  		142666 		 2.5650		0.005159
	2 to 6  		141908 		-0.0045		0.501799
	1 to 5  		142161 		 0.8531		0.196797
	-----------------------------------------------------------------

	|------------------------------------------------------------ |
	|    The DNA test considers an alphabet of 4 letters: C,G,A,T,|
	|determined by two designated bits in the sequence of random  |
	|integers being tested.  It considers 10-letter words, so that|
	|as in OPSO and OQSO, there are 2^20 possible words, and the  |
	|mean number of missing words from a string of 2^21  (over-   |
	|lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.  |
	|The standard deviation sigma=339 was determined as for OQSO  |
	|by simulation.  (Sigma for OPSO, 290, is the true value (to  |
	|three places), not determined by simulation.                 |
	|------------------------------------------------------------ |

			   DNA test for file /home/kamalika/Desktop/krishnendu/project/diehard tests/die.c/ca_gen_no101.bin

	Bits used	No. missing words	z-score		p-value
	31 to 32  		141525 		-1.1337		0.871543
	30 to 31  		142087 		 0.5241		0.300104
	29 to 30  		141894 		-0.0452		0.518034
	28 to 29  		141362 		-1.6145		0.946795
	27 to 28  		141843 		-0.1957		0.577563
	26 to 27  		142237 		 0.9666		0.166877
	25 to 26  		142393 		 1.4268		0.076825
	24 to 25  		141256 		-1.9272		0.973024
	23 to 24  		142224 		 0.9282		0.176644
	22 to 23  		142037 		 0.3766		0.353233
	21 to 22  		142455 		 1.6096		0.053738
	20 to 21  		141851 		-0.1721		0.568307
	19 to 20  		142624 		 2.1082		0.017508
	18 to 19  		141366 		-1.6027		0.945504
	17 to 18  		141953 		 0.1288		0.448750
	16 to 17  		141406 		-1.4847		0.931195
	15 to 16  		142332 		 1.2468		0.106233
	14 to 15  		142045 		 0.4002		0.344502
	13 to 14  		141679 		-0.6794		0.751570
	12 to 13  		142260 		 1.0344		0.150469
	11 to 12  		142049 		 0.4120		0.340168
	10 to 11  		141954 		 0.1318		0.447583
	9 to 10  		141854 		-0.1632		0.564826
	8 to 9  		142129 		 0.6480		0.258494
	7 to 8  		141927 		 0.0521		0.479215
	6 to 7  		142284 		 1.1052		0.134532
	5 to 6  		142357 		 1.3206		0.093324
	4 to 5  		141780 		-0.3815		0.648585
	3 to 4  		142451 		 1.5978		0.055039
	2 to 3  		141506 		-1.1898		0.882930
	1 to 2  		141267 		-1.8948		0.970939
	-----------------------------------------------------------------

	|-------------------------------------------------------------|
	|    This is the COUNT-THE-1''s TEST on a stream of bytes.    |
	|Consider the file under test as a stream of bytes (four per  |
	|32 bit integer).  Each byte can contain from 0 to 8 1''s,    |
	|with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let |
	|the stream of bytes provide a string of overlapping  5-letter|
	|words, each "letter" taking values A,B,C,D,E. The letters are|
	|determined by the number of 1''s in a byte: 0,1,or 2 yield A,|
	|3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus|
	|we have a monkey at a typewriter hitting five keys with vari-|
	|ous probabilities (37,56,70,56,37 over 256).  There are 5^5  |
	|possible 5-letter words, and from a string of 256,000 (over- |
	|lapping) 5-letter words, counts are made on the frequencies  |
	|for each word.   The quadratic form in the weak inverse of   |
	|the covariance matrix of the cell counts provides a chisquare|
	|test: Q5-Q4, the difference of the naive Pearson sums of     |
	|(OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.   |
	|-------------------------------------------------------------|

		Test result for the byte stream from /home/kamalika/Desktop/krishnendu/project/diehard tests/die.c/ca_gen_no101.bin
	  (Degrees of freedom: 5^4-5^3=2500; sample size: 2560000)

			chisquare	z-score		p-value
			2539.33		 0.556		0.289054

	|-------------------------------------------------------------|
	|    This is the COUNT-THE-1''s TEST for specific bytes.      |
	|Consider the file under test as a stream of 32-bit integers. |
	|From each integer, a specific byte is chosen , say the left- |
	|most: bits 1 to 8. Each byte can contain from 0 to 8 1''s,   |
	|with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let  |
	|the specified bytes from successive integers provide a string|
	|of (overlapping) 5-letter words, each "letter" taking values |
	|A,B,C,D,E. The letters are determined  by the number of 1''s,|
	|in that byte: 0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D, |
	|and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter |
	|hitting five keys with with various probabilities: 37,56,70, |
	|56,37 over 256. There are 5^5 possible 5-letter words, and   |
	|from a string of 256,000 (overlapping) 5-letter words, counts|
	|are made on the frequencies for each word. The quadratic form|
	|in the weak inverse of the covariance matrix of the cell     |
	|counts provides a chisquare test: Q5-Q4, the difference of   |
	|the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-  |
	|and 4-letter cell  counts.                                   |
	|-------------------------------------------------------------|

		Test results for specific bytes from /home/kamalika/Desktop/krishnendu/project/diehard tests/die.c/ca_gen_no101.bin
	  (Degrees of freedom: 5^4-5^3=2500; sample size: 256000)

	bits used	chisquare	z-score		p-value
	1 to 8  	2481.62		-0.260		0.602548
	2 to 9  	2640.84		 1.992		0.023201
	3 to 10  	2573.59		 1.041		0.148996
	4 to 11  	2350.89		-2.109		0.982518
	5 to 12  	2469.47		-0.432		0.667052
	6 to 13  	2376.34		-1.749		0.959843
	7 to 14  	2489.55		-0.148		0.558738
	8 to 15  	2547.50		 0.672		0.250857
	9 to 16  	2644.82		 2.048		0.020278
	10 to 17  	2573.05		 1.033		0.150783
	11 to 18  	2478.81		-0.300		0.617782
	12 to 19  	2552.95		 0.749		0.226992
	13 to 20  	2583.51		 1.181		0.118807
	14 to 21  	2538.74		 0.548		0.291903
	15 to 22  	2416.71		-1.178		0.880591
	16 to 23  	2627.55		 1.804		0.035624
	17 to 24  	2503.44		 0.049		0.480611
	18 to 25  	2428.44		-1.012		0.844237
	19 to 26  	2521.11		 0.299		0.382652
	20 to 27  	2468.60		-0.444		0.671515
	21 to 28  	2532.33		 0.457		0.323754
	22 to 29  	2477.34		-0.320		0.625704
	23 to 30  	2560.01		 0.849		0.198018
	24 to 31  	2508.93		 0.126		0.449777
	25 to 32  	2538.82		 0.549		0.291504
	|-------------------------------------------------------------|
	|              THIS IS A PARKING LOT TEST                     |
	|In a square of side 100, randomly "park" a car---a circle of |
	|radius 1.   Then try to park a 2nd, a 3rd, and so on, each   |
	|time parking "by ear".  That is, if an attempt to park a car |
	|causes a crash with one already parked, try again at a new   |
	|random location. (To avoid path problems, consider parking   |
	|helicopters rather than cars.)   Each attempt leads to either|
	|a crash or a success, the latter followed by an increment to |
	|the list of cars already parked. If we plot n: the number of |
	|attempts, versus k: the number successfully parked, we get a |
	|curve that should be similar to those provided by a perfect  |
	|random number generator.  Theory for the behavior of such a  |
	|random curve seems beyond reach, and as graphics displays are|
	|not available for this battery of tests, a simple characteriz|
	|ation of the random experiment is used: k, the number of cars|
	|successfully parked after n=12,000 attempts. Simulation shows|
	|that k should average 3523 with sigma 21.9 and is very close |
	|to normally distributed.  Thus (k-3523)/21.9 should be a st- |
	|andard normal variable, which, converted to a uniform varia- |
	|ble, provides input to a KSTEST based on a sample of 10.     |
	|-------------------------------------------------------------|

		CDPARK: result of 10 tests on file /home/kamalika/Desktop/krishnendu/project/diehard tests/die.c/ca_gen_no101.bin
	  (Of 12000 tries, the average no. of successes should be 
	   3523.0 with sigma=21.9)

	   No. succeses		z-score		p-value
		3512		-0.5023		0.692266
		3511		-0.5479		0.708135
		3519		-0.1826		0.572463
		3536		 0.5936		0.276387
		3522		-0.0457		0.518210
		3526		 0.1370		0.445521
		3525		 0.0913		0.463617
		3498		-1.1416		0.873180
		3494		-1.3242		0.907282
		3554		 1.4155		0.078457
	  Square side=100, avg. no. parked=3519.70 sample std.=16.68
	     p-value of the KSTEST for those 10 p-values: 0.000000


	|-------------------------------------------------------------|
	|              THE MINIMUM DISTANCE TEST                      |
	|It does this 100 times:  choose n=8000 random points in a    |
	|square of side 10000.  Find d, the minimum distance between  |
	|the (n^2-n)/2 pairs of points.  If the points are truly inde-|
	|pendent uniform, then d^2, the square of the minimum distance|
	|should be (very close to) exponentially distributed with mean|
	|.995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and |
	|a KSTEST on the resulting 100 values serves as a test of uni-|
	|formity for random points in the square. Test numbers=0 mod 5|
	|are printed but the KSTEST is based on the full set of 100   |
	|random choices of 8000 points in the 10000x10000 square.     |
	|-------------------------------------------------------------|

		This is the MINIMUM DISTANCE test for file /home/kamalika/Desktop/krishnendu/project/diehard tests/die.c/ca_gen_no101.bin

	Sample no.	 d^2		 mean		equiv uni
	   5		0.3597		0.4253		0.303372
	   10		0.5317		0.4848		0.413973
	   15		0.3866		0.8222		0.321945
	   20		0.1958		0.9072		0.178650
	   25		1.1071		0.9571		0.671307
	   30		1.3914		0.9403		0.753014
	   35		0.7919		0.8756		0.548810
	   40		2.5275		0.8788		0.921149
	   45		0.0177		0.8667		0.017675
	   50		0.6462		0.8841		0.477641
	   55		1.0423		0.8668		0.649184
	   60		0.2429		0.8945		0.216594
	   65		6.3077		0.9471		0.998235
	   70		2.2634		0.9718		0.897179
	   75		0.9629		0.9479		0.620066
	   80		0.3152		0.9374		0.271534
	   85		0.0432		0.9376		0.042454
	   90		3.7629		0.9687		0.977219
	   95		1.4817		0.9643		0.774442
	   100		0.3816		0.9569		0.318506
	--------------------------------------------------------------
	Result of KS test on 100 transformed mindist^2's: p-value=0.650991


	|-------------------------------------------------------------|
	|             THE 3DSPHERES TEST                              |
	|Choose  4000 random points in a cube of edge 1000.  At each  |
	|point, center a sphere large enough to reach the next closest|
	|point. Then the volume of the smallest such sphere is (very  |
	|close to) exponentially distributed with mean 120pi/3.  Thus |
	|the radius cubed is exponential with mean 30. (The mean is   |
	|obtained by extensive simulation).  The 3DSPHERES test gener-|
	|ates 4000 such spheres 20 times.  Each min radius cubed leads|
	|to a uniform variable by means of 1-exp(-r^3/30.), then a    |
	| KSTEST is done on the 20 p-values.                          |
	|-------------------------------------------------------------|

		    The 3DSPHERES test for file /home/kamalika/Desktop/krishnendu/project/diehard tests/die.c/ca_gen_no101.bin

		sample no	r^3		equiv. uni.
		   1		53.693		0.833003
		   2		45.073		0.777411
		   3		7.278		0.215422
		   4		7.158		0.212269
		   5		8.762		0.253280
		   6		32.128		0.657310
		   7		1.015		0.033271
		   8		108.772		0.973370
		   9		27.459		0.599602
		   10		60.027		0.864785
		   11		35.689		0.695664
		   12		25.696		0.575366
		   13		29.358		0.624160
		   14		1.278		0.041696
		   15		7.275		0.215330
		   16		16.307		0.419320
		   17		15.472		0.402932
		   18		35.193		0.690590
		   19		31.568		0.650856
		   20		37.466		0.713175
	--------------------------------------------------------------
		p-value for KS test on those 20 p-values: 0.766681


	|-------------------------------------------------------------|
	|                 This is the SQUEEZE test                    |
	| Random integers are floated to get uniforms on [0,1). Start-|
	| ing with k=2^31=2147483647, the test finds j, the number of |
	| iterations necessary to reduce k to 1, using the reduction  |
	| k=ceiling(k*U), with U provided by floating integers from   |
	| the file being tested.  Such j''s are found 100,000 times,  |
	| then counts for the number of times j was <=6,7,...,47,>=48 |
	| are used to provide a chi-square test for cell frequencies. |
	|-------------------------------------------------------------|

			RESULTS OF SQUEEZE TEST FOR /home/kamalika/Desktop/krishnendu/project/diehard tests/die.c/ca_gen_no101.bin

		    Table of standardized frequency counts
		(obs-exp)^2/exp  for j=(1,..,6), 7,...,47,(48,...)
		-0.1  	 0.1  	 2.0  	-0.5  	-0.6  	-0.5  
		-0.5  	-1.6  	-0.7  	-0.2  	 0.2  	 2.0  
		 0.3  	-0.4  	 1.7  	-0.9  	 0.6  	-1.1  
		 0.3  	-0.7  	-1.3  	 1.2  	-1.3  	 1.2  
		-1.4  	 2.3  	-1.2  	 0.3  	 0.1  	 0.4  
		-0.7  	 0.4  	 0.6  	 1.2  	-1.7  	 1.3  
		 0.5  	-1.0  	 0.5  	 2.1  	 1.6  	 0.0  
		 0.8  
		Chi-square with 42 degrees of freedom:50.119320
		z-score=0.885890, p-value=0.182413
	_____________________________________________________________


	|-------------------------------------------------------------|
	|            The  OVERLAPPING SUMS test                       |
	|Integers are floated to get a sequence U(1),U(2),... of uni- |
	|form [0,1) variables.  Then overlapping sums,                |
	|  S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.   |
	|The S''s are virtually normal with a certain covariance mat- |
	|rix.  A linear transformation of the S''s converts them to a |
	|sequence of independent standard normals, which are converted|
	|to uniform variables for a KSTEST.                           |
	|-------------------------------------------------------------|

			Results of the OSUM test for /home/kamalika/Desktop/krishnendu/project/diehard tests/die.c/ca_gen_no101.bin

			Test no			p-value
			  1 			0.823306
			  2 			0.759138
			  3 			0.586929
			  4 			0.056917
			  5 			0.210966
			  6 			0.026261
			  7 			0.016381
			  8 			0.429252
			  9 			0.021675
			  10 			0.111800
	_____________________________________________________________

		p-value for 10 kstests on 100 kstests:0.011295

	|-------------------------------------------------------------|
	|    This is the RUNS test.  It counts runs up, and runs down,|
	|in a sequence of uniform [0,1) variables, obtained by float- |
	|ing the 32-bit integers in the specified file. This example  |
	|shows how runs are counted: .123,.357,.789,.425,.224,.416,.95|
	|contains an up-run of length 3, a down-run of length 2 and an|
	|up-run of (at least) 2, depending on the next values.  The   |
	|covariance matrices for the runs-up and runs-down are well   |
	|known, leading to chisquare tests for quadratic forms in the |
	|weak inverses of the covariance matrices.  Runs are counted  |
	|for sequences of length 10,000.  This is done ten times. Then|
	|another three sets of ten.                                   |
	|-------------------------------------------------------------|

			The RUNS test for file /home/kamalika/Desktop/krishnendu/project/diehard tests/die.c/ca_gen_no101.bin
		(Up and down runs in a sequence of 10000 numbers)
				Set 1
		 runs up; ks test for 10 p's: 0.873337
		 runs down; ks test for 10 p's: 0.723487
				Set 2
		 runs up; ks test for 10 p's: 0.452033
		 runs down; ks test for 10 p's: 0.939747

	|-------------------------------------------------------------|
	|This the CRAPS TEST.  It plays 200,000 games of craps, counts|
	|the number of wins and the number of throws necessary to end |
	|each game.  The number of wins should be (very close to) a   |
	|normal with mean 200000p and variance 200000p(1-p), and      |
	|p=244/495.  Throws necessary to complete the game can vary   |
	|from 1 to infinity, but counts for all>21 are lumped with 21.|
	|A chi-square test is made on the no.-of-throws cell counts.  |
	|Each 32-bit integer from the test file provides the value for|
	|the throw of a die, by floating to [0,1), multiplying by 6   |
	|and taking 1 plus the integer part of the result.            |
	|-------------------------------------------------------------|

		RESULTS OF CRAPS TEST FOR /home/kamalika/Desktop/krishnendu/project/diehard tests/die.c/ca_gen_no101.bin 
	No. of wins:  Observed	Expected
	                 98483        98585.858586
		z-score=-0.460, pvalue=0.67726

	Analysis of Throws-per-Game:

	Throws	Observed	Expected	Chisq	 Sum of (O-E)^2/E
	1	66495		66666.7		0.442		0.442
	2	37715		37654.3		0.098		0.540
	3	26965		26954.7		0.004		0.544
	4	19332		19313.5		0.018		0.562
	5	14027		13851.4		2.226		2.787
	6	9953		9943.5		0.009		2.796
	7	7061		7145.0		0.988		3.784
	8	5202		5139.1		0.771		4.555
	9	3721		3699.9		0.121		4.676
	10	2688		2666.3		0.177		4.852
	11	1918		1923.3		0.015		4.867
	12	1355		1388.7		0.820		5.687
	13	992		1003.7		0.137		5.823
	14	727		726.1		0.001		5.825
	15	504		525.8		0.907		6.731
	16	391		381.2		0.255		6.986
	17	267		276.5		0.329		7.315
	18	183		200.8		1.583		8.898
	19	138		146.0		0.437		9.335
	20	94		106.2		1.405		10.739
	21	272		287.1		0.796		11.535

	Chisq=  11.53 for 20 degrees of freedom, p= 0.93115

		SUMMARY of craptest on /home/kamalika/Desktop/krishnendu/project/diehard tests/die.c/ca_gen_no101.bin
	 p-value for no. of wins: 0.677258
	 p-value for throws/game: 0.931154
	_____________________________________________________________


